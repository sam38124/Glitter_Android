<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@android:color/white"
    android:fitsSystemWindows="true">

    <!-- View that will be hidden when video goes fullscreen -->
    <RelativeLayout
        android:id="@+id/topbar"
        android:layout_width="match_parent"
        android:layout_height="50dp"
        android:elevation="10dp">

        <ImageView
            android:id="@+id/backimg"
            android:layout_width="40dp"
            android:layout_height="wrap_content"
            android:padding="10dp"
            app:srcCompat="@mipmap/back_two" />

        <TextView
            android:id="@+id/link"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_toEndOf="@id/backimg"
            android:gravity="center_vertical"
            android:singleLine="true"
            android:text="TextView"
            android:textColor="@android:color/black" />
    </RelativeLayout>

    <RelativeLayout
        android:id="@+id/nonVideoLayout"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_below="@id/topbar">

        <com.jianzhi.glitter.VideoEnabledWebView
            android:id="@+id/webroot"
            android:layout_width="match_parent"
            android:layout_height="match_parent" />

    </RelativeLayout>

    <!-- View where the video will be shown when video goes fullscreen -->
    <RelativeLayout
        android:id="@+id/videoLayout"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_below="@id/topbar">

        <!-- View that will be shown while the fullscreen video loads. For example you could include
        a "Loading..." message. However, in this particular example this view is actually defined in
        view_loading_video.xml and inflated programmatically in ExampleActivity.java. The reason for
        this is to keep the main layout (this file) cleaner. -->
        <!-- <View
            android:id="@+id/videoLoading"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_centerInParent="true"
            android:visibility="invisible" /> -->

    </RelativeLayout>

</RelativeLayout>